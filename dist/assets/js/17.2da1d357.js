(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{377:function(s,t,a){s.exports=a.p+"assets/img/image-20200526141217963.77f0e0b5.png"},378:function(s,t,a){s.exports=a.p+"assets/img/image-20200526174046847.10b85f2c.png"},454:function(s,t,a){"use strict";a.r(t);var n=a(19),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"两个链表公共节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#两个链表公共节点"}},[s._v("#")]),s._v(" 两个链表公共节点")]),s._v(" "),n("p",[n("img",{attrs:{src:a(377),alt:"image-20200526141217963"}})]),s._v(" "),n("p",[s._v("在时间复杂度要求O(n)，空间复杂度O(1)的要求下，暴力破解法就无法适用")]),s._v(" "),n("p",[s._v("双指针是唯一符合此方法的算法，定义两个指针A,B分别指向HEAD1 HEAD2，两个指针同时遍历，当其中一个节点到尾部时切换指向另一个链表的头节点 例如：A指向HEAD2，B指向HEAD1；当循环到两指针指向的节点相同时，退出循环，返回相同的节点")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @param {ListNode} headA\n * @param {ListNode} headB\n * @return {ListNode}\n */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("getIntersectionNode")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("headA"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" headB")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" node1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" headA\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" node2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" headB\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v("node2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        node1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" node1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("node1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("headB\n        node2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" node2"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("node2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("headA\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" node1\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[n("img",{attrs:{src:a(378),alt:"image-20200526174046847"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);