(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{522:function(v,_,t){"use strict";t.r(_);var s=t(19),n=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"面向切面编程-aop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向切面编程-aop"}},[v._v("#")]),v._v(" 面向切面编程（AOP）")]),v._v(" "),t("p",[v._v("面向切面编程（AOP）就是对软件系统不同关注点的"),t("strong",[v._v("分离")]),v._v("，开发者通过拦截方法调用并在方法调用前后添加辅助代码。")]),v._v(" "),t("p",[v._v("面向切面编程与面向对象编程并没有冲突，是OOP的一个扩展，一个补充加强。")]),v._v(" "),t("p",[v._v("假设把应用程序想成一个立体结构的话，OOP的利刃是纵向切入系统，把系统划分为很多个模块（如：用户模块，文章模块等等），而AOP的利刃是横向切入系统，提取各个模块可能都要重复操作的部分（如：权限检查，日志记录等等）。由此可见，AOP是OOP的一个有效补充。")]),v._v(" "),t("p",[v._v("功能： 让关注点代码与业务代码分离！")]),v._v(" "),t("p",[v._v("主要的功能是："),t("strong",[v._v("日志记录，性能统计，安全控制，事务处理，异常处理")]),v._v("等等，解决代码复用。")]),v._v(" "),t("p",[t("strong",[v._v("关注点")])]),v._v(" "),t("p",[v._v("关注点,重复代码就叫做关注点；")]),v._v(" "),t("p",[t("strong",[v._v("切面")])]),v._v(" "),t("p",[v._v("关注点形成的类，就叫切面(类)！")]),v._v(" "),t("p",[v._v("面向切面编程，就是指 对很多功能都有的重复的代码抽取，再在运行的时候往业务方法上动态植入“切面类代码”。")]),v._v(" "),t("p",[t("strong",[v._v("切入点")])]),v._v(" "),t("p",[v._v("执行目标对象方法，动态植入切面代码。")]),v._v(" "),t("p",[v._v("可以通过切入点表达式，指定拦截哪些类的哪些方法； 给指定的类在运行的时候植入切面类代码。")])])}),[],!1,null,null,null);_.default=n.exports}}]);